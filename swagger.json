{
  "openapi": "3.0.1",
  "info": {
    "title": "CTI Outbound Management WebApi",
    "version": "v1"
  },
  "paths": {
    "/api/Campaigns": {
      "get": {
        "tags": [
          "Campaigns"
        ],
        "summary": "Gets all campaigns, that current user granted to",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CampaignInfo"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/Campaigns/{id}": {
      "get": {
        "tags": [
          "Campaigns"
        ],
        "summary": "Gets campaign by specified id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "campaign's id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Campaign"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "User does not have permission to view campaign"
          },
          "404": {
            "description": "Campaign with specified id not found"
          }
        }
      }
    },
    "/api/Contacts/{id}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Gets contact by specified id",
        "operationId": "Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "contact's id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "403": {
            "description": "User does not have permission to contact's campaign"
          },
          "404": {
            "description": "Contact with specified id not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Contacts"
        ],
        "summary": "Patches contact with specified id",
        "description": "Sample request:\r\n\r\n[\r\n  {\r\n    \"op\": \"replace\",\r\n    \"path\": \"/calllist\",\r\n    \"value\": \"calllist#1\"\r\n  },\r\n  {\r\n    \"op\": \"replace\",\r\n    \"path\": \"/state\",\r\n    \"value\": 110\r\n  },\r\n  {\r\n    \"op\": \"replace\",\r\n    \"path\": \"/timeZoneInfoName\",\r\n    \"value\": \"UTC\"\r\n  },\r\n]",
        "operationId": "Patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "contact's id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "PATCH update model",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UpdateModel"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UpdateModel"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UpdateModel"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UpdateModel"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UpdateModel"
                }
              }
            },
            "text/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UpdateModel"
                }
              }
            },
            "application/*+xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UpdateModel"
                }
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "403": {
            "description": "User does not have permission to contact's campaign"
          },
          "404": {
            "description": "Contact with specified id not found"
          },
          "400": {
            "description": "Mallformed update model"
          }
        }
      }
    },
    "/api/Contacts/{id}/phones": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Gets contact's phones",
        "operationId": "GetPhones",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "contact id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Phone"
                  }
                }
              }
            }
          },
          "403": {
            "description": "User does not have permission to contact's campaign"
          },
          "404": {
            "description": "Contact with specified id not found"
          }
        }
      }
    },
    "/api/Contacts/{id}/attributes": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Gets contact's custom\\user attributes",
        "operationId": "GetAttributes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "contact id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserAttribute"
                  }
                }
              }
            }
          },
          "403": {
            "description": "User does not have permission to contact's campaign"
          },
          "404": {
            "description": "Contact with specified id not found"
          }
        }
      }
    },
    "/api/Contacts/filters": {
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Creates filter for future operations upon selected contacts",
        "operationId": "CreateFilter",
        "requestBody": {
          "description": "filter",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactFilter"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactFilter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactFilter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactFilter"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContactFilter"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContactFilter"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/ContactFilter"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "201": {
            "description": "Filter created and it's URI can be found at Location header",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactFilterFilterData"
                }
              }
            }
          },
          "400": {
            "description": "Mallformed filter"
          },
          "403": {
            "description": "User does not have permission to specified campaign"
          }
        }
      }
    },
    "/api/Contacts/filters/{id}/info": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Gets information about previously created filter",
        "operationId": "GetFilter",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "filter id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactFilterFilterData"
                }
              }
            }
          },
          "404": {
            "description": "Specified filter not found"
          }
        }
      }
    },
    "/api/Contacts/filters/{id}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Gets contacts by previously created filter",
        "operationId": "GetContactsByFilter",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "filter id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "offser",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactInfo"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Specified filter not found"
          },
          "403": {
            "description": "User does not have permission to specified campaign"
          }
        }
      },
      "patch": {
        "tags": [
          "Contacts"
        ],
        "summary": "Patches contacts by previously created filter",
        "description": "Sample request:\r\n\r\n[\r\n  {\r\n    \"op\": \"replace\",\r\n    \"path\": \"/calllist\",\r\n    \"value\": \"calllist#1\"\r\n  },\r\n  {\r\n    \"op\": \"replace\",\r\n    \"path\": \"/state\",\r\n    \"value\": 110\r\n  }\r\n]",
        "operationId": "PatchContactsByFilter",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "filter id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "PATCH update model",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UpdateModel"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UpdateModel"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UpdateModel"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UpdateModel"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UpdateModel"
                }
              }
            },
            "text/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UpdateModel"
                }
              }
            },
            "application/*+xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UpdateModel"
                }
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Int32BatchResult"
                  }
                }
              }
            }
          },
          "403": {
            "description": "User does not have permission to contact's campaign"
          },
          "404": {
            "description": "Specified filter not found"
          },
          "400": {
            "description": "Mallformed update model"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Script": {
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 100,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CampaignInfo": {
        "required": [
          "active",
          "gid",
          "id",
          "name",
          "script"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 100,
            "type": "string"
          },
          "gid": {
            "maxLength": 100,
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "script": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Script"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "CallVariables": {
        "type": "object",
        "properties": {
          "scriptName": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "contactID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "phoneNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "agentNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "agentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Campaign": {
        "required": [
          "agentGroup",
          "answeringMachineTransferPhoneNumber",
          "dateFrom",
          "dateTo",
          "description",
          "detectionType ",
          "directAgentCallInPreview",
          "faxTransferPhoneNumber",
          "gid",
          "greetingMessageName",
          "id",
          "incomingSkillGroup",
          "isGreetingMessagePlayed",
          "maxNuisanceLevel",
          "name",
          "nuisanceTime",
          "outboundCallsPriority",
          "parkClientCallToIVRInPredictive",
          "previewDelayBeforeClientCall",
          "scheduleId",
          "script",
          "scriptLimit",
          "tBreath",
          "variableMapId",
          "waitAgentPickUpThePhone",
          "workflowId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 100,
            "type": "string"
          },
          "gid": {
            "maxLength": 100,
            "type": "string"
          },
          "description": {
            "maxLength": 4000,
            "type": "string"
          },
          "script": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Script"
              }
            ]
          },
          "scriptLimit": {
            "type": "integer",
            "format": "int32"
          },
          "agentGroup": {
            "maxLength": 4000,
            "type": "string"
          },
          "workflowId": {
            "type": "integer",
            "format": "int32"
          },
          "dateFrom": {
            "type": "string",
            "format": "date-time"
          },
          "dateTo": {
            "type": "string",
            "format": "date-time"
          },
          "enabled": {
            "type": "boolean",
            "default": false
          },
          "variableMapId": {
            "type": "integer",
            "format": "int32"
          },
          "scheduleId": {
            "type": "integer",
            "format": "int32"
          },
          "nuisanceTime": {
            "maximum": 32767,
            "minimum": -1,
            "type": "integer",
            "format": "int32"
          },
          "maxNuisanceLevel": {
            "maximum": 4,
            "minimum": -5,
            "type": "integer",
            "format": "int32"
          },
          "blendedMode": {
            "type": "boolean",
            "nullable": true
          },
          "outboundCallsPriority": {
            "type": "boolean"
          },
          "parkClientCallToIVRInPredictive": {
            "type": "boolean"
          },
          "callVariables": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CallVariables"
              }
            ],
            "nullable": true
          },
          "incomingSkillGroup": {
            "maxLength": 4000,
            "type": "string"
          },
          "detectionType ": {
            "type": "integer",
            "format": "int32"
          },
          "faxTransferPhoneNumber": {
            "maxLength": 40,
            "type": "string"
          },
          "answeringMachineTransferPhoneNumber": {
            "maxLength": 40,
            "type": "string"
          },
          "directAgentCallInPreview": {
            "type": "boolean"
          },
          "previewDelayBeforeClientCall": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "greetingMessageName": {
            "maxLength": 255,
            "type": "string"
          },
          "isGreetingMessagePlayed": {
            "type": "boolean"
          },
          "waitAgentPickUpThePhone": {
            "type": "boolean"
          },
          "tBreath": {
            "maximum": 32767,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Phone": {
        "required": [
          "number",
          "phoneKindGID"
        ],
        "type": "object",
        "properties": {
          "phoneId": {
            "type": "integer",
            "format": "int32"
          },
          "phoneGID": {
            "type": "string",
            "nullable": true
          },
          "phoneKindGID": {
            "type": "string"
          },
          "phoneStateID": {
            "type": "integer",
            "format": "int32"
          },
          "number": {
            "minLength": 1,
            "type": "string"
          },
          "nextCallTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dueTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserAttribute": {
        "required": [
          "gid",
          "value"
        ],
        "type": "object",
        "properties": {
          "gid": {
            "type": "string"
          },
          "value": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Contact": {
        "required": [
          "firstName",
          "lastName",
          "phones",
          "timeZoneInfoName"
        ],
        "type": "object",
        "properties": {
          "phones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Phone"
            }
          },
          "userAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserAttribute"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "campaign": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "firstName": {
            "maxLength": 100,
            "type": "string"
          },
          "middleName": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "maxLength": 100,
            "type": "string"
          },
          "nextCallTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "agentId": {
            "type": "string",
            "nullable": true
          },
          "contactGid": {
            "type": "string",
            "nullable": true
          },
          "timeZoneInfoName": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "groupName": {
            "type": "string",
            "nullable": true
          },
          "skGid1": {
            "type": "string",
            "nullable": true
          },
          "skGid2": {
            "type": "string",
            "nullable": true
          },
          "skGid3": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "integer",
            "format": "int32"
          },
          "businessResult": {
            "type": "string",
            "nullable": true
          },
          "callList": {
            "type": "string",
            "nullable": true
          },
          "failCount": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UpdateModel": {
        "required": [
          "op",
          "path"
        ],
        "type": "object",
        "properties": {
          "op": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "value": {
            "type": "object",
            "additionalProperties": false,
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContactCampaignKey": {
        "type": "object",
        "properties": {
          "campaignId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "skGid1": {
            "type": "string",
            "nullable": true
          },
          "skGid2": {
            "type": "string",
            "nullable": true
          },
          "skGid3": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Contact's campaign key."
      },
      "ListType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "List": {
        "required": [
          "type",
          "values"
        ],
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ListType"
              }
            ]
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "ContactFilter": {
        "required": [
          "campaignKey"
        ],
        "type": "object",
        "properties": {
          "campaignKey": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ContactCampaignKey"
              }
            ],
            "description": "Contact's campaign key"
          },
          "values": {
            "allOf": [
              {
                "$ref": "#/components/schemas/List"
              }
            ],
            "description": "Collection of contact's internal or external identifiers",
            "nullable": true
          },
          "callList": {
            "type": "string",
            "description": "Contact's call list",
            "nullable": true
          },
          "states": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Collection of contact's states",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContactFilterFilterData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "filter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ContactFilter"
              }
            ],
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "expires": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "rowCount": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ContactInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "campaign": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "middleName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "contactGid": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ErrorType": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "Error": {
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ErrorType"
              }
            ]
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Int32BatchResult": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}